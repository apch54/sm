// Generated by CoffeeScript 1.12.2

/*     ecrit par fc   le  2017-03-30 */
Phacker.Game.Platform = (function() {
  function Platform(gm, dgrO, bnsO) {
    this.gm = gm;
    this.dgrO = dgrO;
    this.bnsO = bnsO;
    this._fle_ = 'Platform';
    this.pm = this.gm.parameters.pfm = {};
    this.pm = {
      x0: -100,
      y0: this.gm.gameOptions.fullscreen ? 460 : 390,
      w: 123,
      h: 34,
      last_x: 0,
      n: this.gm.gameOptions.fullscreen ? 6 : 8
    };
    this.pm.ay0 = [this.pm.y0 + this.pm.h / 2, this.pm.y0, this.pm.y0 - this.pm.h / 2];
    this.pfm = this.gm.add.physicsGroup();
    this.init_pfm();
  }

  Platform.prototype.init_pfm = function() {
    var i, j, nd, ref, results;
    this.make_one_pfm(this.pm.x0, this.pm.y0, 0);
    results = [];
    for (i = j = 1, ref = this.pm.n - 1; 1 <= ref ? j <= ref : j >= ref; i = 1 <= ref ? ++j : --j) {
      if (i === 3 || i === 5) {
        nd = 1;
      } else {
        nd = 0;
      }
      this.make_one_pfm(this.pm.last_x + this.pm.w, this.pm.y0, nd);
      if (i === 4) {
        results.push(this.bnsO.make_bonus(this.pm.last_x + this.pm.w, this.pm.y0));
      } else {
        results.push(void 0);
      }
    }
    return results;
  };

  Platform.prototype.make_one_pfm = function(x, y, nd) {
    var p;
    this.dgrO.make_danger(x, y - this.dgrO.pm.dy, nd);
    p = this.pfm.create(x, y, "platform");
    p.n_danger = nd;
    this.pm.last_x = p.x;
    p.body.immovable = true;
    return p.touched_once = false;
  };

  Platform.prototype.create_destroy = function() {
    var pf0, x3, y_nd_bn;
    pf0 = this.pfm.getAt(0);
    if (this.gm.camera.x > pf0.x + this.pm.w) {
      pf0.destroy();
      y_nd_bn = this.game_rules();
      x3 = this.pfm.getAt(this.pfm.length - 1).x + this.pm.w;
      this.make_one_pfm(x3, y_nd_bn.y, y_nd_bn.nd);
      if (y_nd_bn.bn) {
        return this.bnsO.make_bonus(this.pm.last_x + this.pm.w, this.pm.y0);
      }
    }
  };

  Platform.prototype.game_rules = function() {
    var bns, lastP, lastP1, len, nn, yy;
    len = this.pfm.length;
    lastP = this.pfm.getAt(len - 1);
    if (this.gm.rnd.integerInRange(0, 3) < 1) {
      bns = true;
    } else {
      bns = false;
    }
    if (this.gm.ge.score < 40) {
      if (lastP.n_danger > 1) {
        nn = [this.gm.rnd.integerInRange(0, 1)];
      } else {
        nn = [this.gm.rnd.integerInRange(1, 2)];
      }
      yy = lastP.y;
    } else if (this.gm.ge.score < 90) {
      if (lastP.n_danger > 1) {
        nn = [this.gm.rnd.integerInRange(0, 1)];
      } else {
        nn = [this.gm.rnd.integerInRange(1, 2)];
      }
      yy = lastP.y;
      this.sptO.pm.vx0 = this.sptO.pm.vx1;
    } else if (this.gm.ge.score < 150) {
      if (lastP.n_danger > 1) {
        nn = [this.gm.rnd.integerInRange(0, 1)];
      } else {
        nn = [this.gm.rnd.integerInRange(1, 2)];
      }
      if (len > 2) {
        lastP1 = this.pfm.getAt(len - 2);
      }
      if (lastP.y === lastP1.y) {
        if (lastP.y > this.pm.y0) {
          yy = this.pm.ay0[this.gm.rnd.integerInRange(0, 1)];
        } else if (lastP.y < this.pm.y0) {
          yy = this.pm.ay0[this.gm.rnd.integerInRange(1, 2)];
        } else if (lastP.y === this.pm.y0) {
          yy = this.pm.ay0[this.gm.rnd.integerInRange(0, 2)];
        }
      } else {
        yy = lastP.y;
      }
      this.sptO.pm.vx0 = this.sptO.pm.vx1;
    } else {
      if (lastP.n_danger > 1) {
        nn = [this.gm.rnd.integerInRange(0, 1)];
      } else {
        nn = [this.gm.rnd.integerInRange(1, 3)];
      }
      if (len > 2) {
        lastP1 = this.pfm.getAt(len - 2);
      }
      if (lastP.y === lastP1.y) {
        if (lastP.y > this.pm.y0) {
          yy = this.pm.ay0[this.gm.rnd.integerInRange(0, 1)];
        } else if (lastP.y < this.pm.y0) {
          yy = this.pm.ay0[this.gm.rnd.integerInRange(1, 2)];
        } else if (lastP.y === this.pm.y0) {
          yy = this.pm.ay0[this.gm.rnd.integerInRange(0, 2)];
        }
      } else {
        yy = lastP.y;
      }
      this.sptO.pm.vx0 = this.sptO.pm.vx2;
    }
    return {
      y: yy,
      nd: nn,
      bn: bns
    };
  };

  Platform.prototype.bind = function(sptO) {
    return this.sptO = sptO;
  };

  return Platform;

})();
